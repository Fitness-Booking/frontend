{"ast":null,"code":"import { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { LogService } from './shared/service/log.service';\nimport { AuthService } from './shared/service/user.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserManagerApiService } from './shared/api/userManagerApi.service';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }, AuthService, UserManagerApiService, LogService, {\n      provide: JWT_OPTIONS,\n      useValue: JWT_OPTIONS\n    }, JwtHelperService],\n    imports: [BrowserModule, ReactiveFormsModule, HttpClientModule, RouterModule, AppRoutingModule, NgbModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}