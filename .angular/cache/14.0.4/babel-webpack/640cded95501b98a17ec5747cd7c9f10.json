{"ast":null,"code":"import { UserRegisterModel } from '../../model/user/register.model';\nimport { UserLoginModel } from '../../model/user/login.model';\nimport { UserRequest } from 'src/app/model/requests/user.request';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/userManagerApi.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./log.service\";\nimport * as i4 from \"@auth0/angular-jwt\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(userService, router, log, jwtHelper) {\n      this.userService = userService;\n      this.router = router;\n      this.log = log;\n      this.jwtHelper = jwtHelper;\n    }\n\n    signIn(email, password) {\n      const user = new UserLoginModel(email, password);\n      this.userService.postLogin(user).subscribe(result => {\n        console.log(result);\n\n        if (!(result && result.access_token)) {\n          return;\n        }\n\n        localStorage.setItem('access_token', result.access_token);\n        this.router.navigate(['/home']);\n      });\n    }\n\n    signUp(email, username, password, repeatPassword, roleId) {\n      const registerUser = new UserRegisterModel(username, email, password, repeatPassword, roleId);\n      this.userService.putRegistration(registerUser).subscribe(result => {\n        if (!(result && result.access_token)) {\n          return;\n        }\n\n        localStorage.setItem('access_token', result.access_token);\n        this.router.navigate(['/home']);\n      });\n    }\n\n    get(id, roleId, name, email) {\n      const request = new UserRequest(id, roleId, name, email);\n      return this.userService.get(request);\n    }\n\n    logOut() {\n      localStorage.removeItem('access_token');\n    }\n\n    hasRestrictions(pageRestrictions) {\n      let result = false;\n      const token = localStorage.getItem('access_token');\n\n      if (token) {\n        const restriction = this.jwtHelper.decodeToken(token).grants;\n\n        if (pageRestrictions && pageRestrictions.length > 0) {\n          if (restriction) {\n            for (let i = 0; i < pageRestrictions.length; ++i) {\n              pageRestrictions[i] = pageRestrictions[i].toLowerCase();\n            }\n\n            result = pageRestrictions.includes(restriction.toLowerCase());\n          }\n        } else {\n          result = true;\n        }\n      }\n\n      return result;\n    }\n\n    getUserId() {\n      let result = \"\";\n      const token = localStorage.getItem('access_token');\n\n      if (token) {\n        result = this.jwtHelper.decodeToken(token).sub;\n      }\n\n      return result;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.UserManagerApiService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.LogService), i0.ɵɵinject(i4.JwtHelperService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}