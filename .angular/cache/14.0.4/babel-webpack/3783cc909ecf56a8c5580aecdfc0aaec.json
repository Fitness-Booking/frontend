{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/service/visitorSchredule.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\n\nfunction SubscribeComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubscribeComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, SubscribeComponent_div_9_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.date.errors.reqiired);\n  }\n}\n\nfunction SubscribeComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let SubscribeComponent = /*#__PURE__*/(() => {\n  class SubscribeComponent {\n    constructor(service, formBuilder, router) {\n      this.service = service;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.sectionScheduleId = +history.state.sectionScheduleId;\n      this.userId = +history.state.userId;\n      this.form = this.formBuilder.group({\n        date: [new Date().getDate()]\n      });\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.createVisitorSchedule();\n    }\n\n    createVisitorSchedule() {\n      this.service.add(this.userId, new Date(this.f.date.value), this.sectionScheduleId).subscribe(result => {\n        this.router.navigate(['section-schedule-page']);\n      });\n    }\n\n  }\n\n  SubscribeComponent.ɵfac = function SubscribeComponent_Factory(t) {\n    return new (t || SubscribeComponent)(i0.ɵɵdirectiveInject(i1.VisitorScheduleService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  SubscribeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubscribeComponent,\n    selectors: [[\"app-subscribe\"]],\n    decls: 16,\n    vars: 7,\n    consts: [[1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"date\", \"formControlName\", \"date\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/section-schedule-page\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function SubscribeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Subscribe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function SubscribeComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, SubscribeComponent_div_9_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"button\", 6);\n        i0.ɵɵtemplate(12, SubscribeComponent_span_12_Template, 1, 0, \"span\", 7);\n        i0.ɵɵtext(13, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 8);\n        i0.ɵɵtext(15, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.date.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.date.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    encapsulation: 2\n  });\n  return SubscribeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}