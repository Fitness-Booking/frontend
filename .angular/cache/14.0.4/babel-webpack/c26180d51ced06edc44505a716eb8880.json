{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SubscriptionManagerApiService = /*#__PURE__*/(() => {\n  class SubscriptionManagerApiService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.baseUrl + 'Subscription/';\n    }\n\n    subscribe(sectionSchedule) {\n      const endpointUrl = this.url + \"subscribe/\";\n      console.log(sectionSchedule);\n      return this.http.post(endpointUrl, sectionSchedule).pipe(catchError(error => of(console.log(error))));\n    }\n\n    unSubscribe(visitorSchredul) {\n      const endpointUrl = this.url;\n      return this.http.put(endpointUrl, visitorSchredul).pipe(catchError(error => of(console.log(error))));\n    }\n\n    get(visitorSchreduleRequest) {\n      return this.http.get(this.url, {\n        params: {\n          userId: visitorSchreduleRequest.userId.toString()\n        }\n      });\n    }\n\n  }\n\n  SubscriptionManagerApiService.ɵfac = function SubscriptionManagerApiService_Factory(t) {\n    return new (t || SubscriptionManagerApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SubscriptionManagerApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SubscriptionManagerApiService,\n    factory: SubscriptionManagerApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return SubscriptionManagerApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}