{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SectionManagerApiService = /*#__PURE__*/(() => {\n  class SectionManagerApiService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.baseUrl + 'Section/';\n    }\n\n    add(section) {\n      const endpointUrl = this.url;\n      return this.http.post(endpointUrl, section).pipe(catchError(error => of(console.log(error))));\n    }\n\n    update(section) {\n      const endpointUrl = this.url;\n      return this.http.put(endpointUrl, section).pipe(catchError(error => of(console.log(error))));\n    }\n\n    get(sectionRequest) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.get(this.url, {\n        params: {\n          coachId: sectionRequest.name == null ? '' : sectionRequest.name.toString(),\n          name: sectionRequest.coachId == null ? '' : sectionRequest.coachId.toString(),\n          gymId: sectionRequest.gymId == null ? '' : sectionRequest.gymId.toString(),\n          typeId: sectionRequest.typeId == null ? '' : sectionRequest.typeId.toString()\n        }\n      });\n    }\n\n  }\n\n  SectionManagerApiService.ɵfac = function SectionManagerApiService_Factory(t) {\n    return new (t || SectionManagerApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SectionManagerApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SectionManagerApiService,\n    factory: SectionManagerApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return SectionManagerApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}