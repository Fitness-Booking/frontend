{"ast":null,"code":"const MILLISECONDS_IN_A_SECOND = 1000;\nconst SECONDS_IN_A_MINUTE = 60;\nconst MINUTES_IN_AN_HOUR = 60;\nconst HOURS_IN_A_DAY = 24;\nconst DAYS_IN_A_WEEK = 7;\nconst MILLISECONDS_IN_A_MINUTE = MILLISECONDS_IN_A_SECOND * SECONDS_IN_A_MINUTE;\nconst MILLISECONDS_IN_AN_HOUR = MILLISECONDS_IN_A_MINUTE * MINUTES_IN_AN_HOUR;\nconst MILLISECONDS_IN_A_DAY = MILLISECONDS_IN_AN_HOUR * HOURS_IN_A_DAY;\nconst MILLISECONDS_IN_A_WEEK = MILLISECONDS_IN_A_DAY * DAYS_IN_A_WEEK;\nexport class TimeSpan {\n  constructor(milliSeconds = 0) {\n    this._seconds = 0;\n    this._minutes = 0;\n    this._hours = 0;\n    this.milliseconds = milliSeconds;\n  }\n\n  get hours() {\n    return this._hours;\n  }\n\n  set hours(value) {\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    this._hours = value;\n    this.calcMilliSeconds();\n  }\n\n  get minutes() {\n    return this._minutes;\n  }\n\n  set minutes(value) {\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    this._minutes = value;\n    this.calcMilliSeconds();\n  }\n\n  get seconds() {\n    return this._seconds;\n  }\n\n  set seconds(value) {\n    this._seconds = value;\n    this.calcMilliSeconds();\n  }\n\n  get milliseconds() {\n    return this._milliseconds;\n  }\n\n  set milliseconds(value) {\n    if (isNaN(value)) {\n      value = 0;\n    }\n\n    this._milliseconds = value;\n    this.calcMilliSeconds();\n  }\n\n  get TotalMilliSeconds() {\n    return this._totalMilliSeconds;\n  }\n\n  get TotalSeconds() {\n    return Math.round(this._totalMilliSeconds / MILLISECONDS_IN_A_SECOND);\n  }\n\n  get TotalMinutes() {\n    return Math.round(this._totalMilliSeconds / MILLISECONDS_IN_A_MINUTE);\n  }\n\n  get TotalHours() {\n    return Math.round(this._totalMilliSeconds / MILLISECONDS_IN_AN_HOUR);\n  }\n\n  static Subtract(date1, date2) {\n    let milliSeconds = date1 - date2;\n    return new TimeSpan(milliSeconds);\n  }\n\n  static Day() {\n    return new TimeSpan(MILLISECONDS_IN_A_DAY);\n  }\n\n  static Hour() {\n    return new TimeSpan(MILLISECONDS_IN_AN_HOUR);\n  }\n\n  static Week() {\n    return new TimeSpan(MILLISECONDS_IN_A_WEEK);\n  }\n\n  static Month() {\n    let now = new Date();\n    let aMonthAgo = new Date();\n    aMonthAgo.setMonth(aMonthAgo.getMonth() - 1);\n    return new TimeSpan(now - aMonthAgo);\n  }\n\n  static FromStringToTimeSpan(str) {\n    let dataFromStr = str.split(':');\n    return new TimeSpan(MILLISECONDS_IN_AN_HOUR * +dataFromStr[0] + MILLISECONDS_IN_A_MINUTE * +dataFromStr[1]);\n  }\n\n  static toStringValue(time) {\n    let leftValue = time.hours;\n    let rightValue = time.minutes;\n    let answer = \"\";\n    answer = this.appendAnswer(answer, leftValue) + \":\";\n    console.log(answer);\n    answer = this.appendAnswer(answer, rightValue);\n    console.log(answer);\n    return answer;\n  }\n\n  static appendAnswer(str, value) {\n    if (value < 10) {\n      return str += \"0\" + value.toString();\n    }\n\n    return str += value.toString();\n  }\n\n  addTo(date) {\n    console.log('add ' + this.TotalMilliSeconds, this);\n    date.setMilliseconds(date.getMilliseconds() + this.TotalMilliSeconds);\n    return date;\n  }\n\n  subtructFrom(date) {\n    date.setMilliseconds(date.getMilliseconds() - this.TotalMilliSeconds);\n    return date;\n  }\n\n  roundValue(origValue, maxValue) {\n    return {\n      modulu: origValue % maxValue,\n      addition: Math.round(origValue / maxValue)\n    };\n  }\n\n  calcMilliSeconds() {\n    let newMilliSecond = this.roundValue(this._milliseconds, MILLISECONDS_IN_A_SECOND);\n    this._milliseconds = newMilliSecond.modulu;\n    this._seconds += newMilliSecond.addition;\n    let newSecond = this.roundValue(this._seconds, SECONDS_IN_A_MINUTE);\n    this._seconds = newSecond.modulu;\n    this._minutes += newSecond.addition;\n    let newminutes = this.roundValue(this._minutes, MINUTES_IN_AN_HOUR);\n    this._minutes = newminutes.modulu;\n    this._hours += newminutes.addition;\n    this._totalMilliSeconds = this.hours * MILLISECONDS_IN_AN_HOUR + this.minutes * MILLISECONDS_IN_A_MINUTE + this.seconds * MILLISECONDS_IN_A_SECOND + this.milliseconds;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}