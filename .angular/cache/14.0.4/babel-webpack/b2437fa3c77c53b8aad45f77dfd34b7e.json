{"ast":null,"code":"import { Roles } from './../../../model/enums/roles.enum';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/service/coach.service\";\nimport * as i4 from \"src/app/shared/service/log.service\";\nimport * as i5 from \"src/app/shared/service/user.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction AddEditCoachComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\", 8);\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", item_r2.name)(\"value\", item_r2.name);\n  }\n}\n\nfunction AddEditCoachComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n}\n\nexport let AddEditCoachComponent = /*#__PURE__*/(() => {\n  class AddEditCoachComponent {\n    constructor(formBuilder, router, coachService, logger, authService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.coachService = coachService;\n      this.logger = logger;\n      this.authService = authService;\n      this.loading = false;\n      this.submitted = false;\n      this.users = [];\n    }\n\n    ngOnInit() {\n      this.sectionId = +sessionStorage.getItem('sectionId');\n      this.authService.get(null, Roles.Coach).subscribe(users => {\n        this.users = users;\n      });\n      this.form = this.formBuilder.group({\n        coach: ['', Validators.required]\n      });\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.createCoach();\n    }\n\n    createCoach() {\n      console.log(this.sectionId + \" \" + this.findCoachInUsersByName(this.f.coach.value));\n      this.coachService.add(this.sectionId, this.findCoachInUsersByName(this.f.coach.value)).subscribe(result => {\n        this.exit();\n      });\n    }\n\n    findCoachInUsersByName(coachName) {\n      let result = null;\n      this.users.forEach(item => {\n        if (item.name == coachName) {\n          result = item.id;\n        }\n      });\n\n      if (!result) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: \"Some error occured in add-edit-coach-component method -> findCoachInUsersByName. Its suppose to be error with names comparing\"\n        });\n      }\n\n      return result;\n    }\n\n    exit() {\n      sessionStorage.removeItem('coaches');\n      this.router.navigate(['coaches']);\n    }\n\n  }\n\n  AddEditCoachComponent.ɵfac = function AddEditCoachComponent_Factory(t) {\n    return new (t || AddEditCoachComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CoachService), i0.ɵɵdirectiveInject(i4.LogService), i0.ɵɵdirectiveInject(i5.AuthService));\n  };\n\n  AddEditCoachComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditCoachComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"coach\"], [3, \"label\", \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/sections\", 1, \"btn\", \"btn-link\"], [3, \"label\", \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function AddEditCoachComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Add coach\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditCoachComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtext(4, \" Coach \");\n        i0.ɵɵelementStart(5, \"select\", 2);\n        i0.ɵɵtemplate(6, AddEditCoachComponent_option_6_Template, 1, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 5);\n        i0.ɵɵtemplate(9, AddEditCoachComponent_span_9_Template, 1, 0, \"span\", 6);\n        i0.ɵɵtext(10, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 7);\n        i0.ɵɵtext(12, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLinkWithHref],\n    encapsulation: 2\n  });\n  return AddEditCoachComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}