{"ast":null,"code":"import { VisitType } from '../../../model/enums/visitType.enum.';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../shared/service/section.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction AddEditSectionComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Add section\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditSectionComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit section\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditSectionComponent_div_4_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"option\", 12);\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", item_r6)(\"value\", item_r6);\n  }\n}\n\nfunction AddEditSectionComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3);\n    i0.ɵɵtext(2, \" Visit Type \");\n    i0.ɵɵelementStart(3, \"select\", 10);\n    i0.ɵɵtemplate(4, AddEditSectionComponent_div_4_option_4_Template, 1, 2, \"option\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.visitTypes);\n  }\n}\n\nfunction AddEditSectionComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditSectionComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AddEditSectionComponent_div_9_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.name.errors.reqiired);\n  }\n}\n\nfunction AddEditSectionComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let AddEditSectionComponent = /*#__PURE__*/(() => {\n  class AddEditSectionComponent {\n    constructor(formBuilder, router, sectionService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.sectionService = sectionService;\n      this.loading = false;\n      this.submitted = false;\n      this.visitTypes = [];\n    }\n\n    ngOnInit() {\n      for (let value in VisitType) if (typeof VisitType[value] === 'number') this.visitTypes.push(value);\n\n      this.id = +history.state.sectionId;\n      this.gymId = +sessionStorage.getItem('gymId');\n      this.isAddMode = !this.id;\n\n      if (!this.isAddMode) {\n        this.name = history.state.name;\n        this.type = VisitType[history.state.typeId];\n      }\n\n      this.form = this.formBuilder.group({\n        name: [this.isAddMode ? '' : this.name, Validators.required],\n        type: [this.visitTypes[0], this.isAddMode ? Validators.required : Validators.nullValidator]\n      });\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.form.invalid) {\n        return;\n      }\n\n      this.loading = true;\n\n      if (this.isAddMode) {\n        this.createSection();\n      } else {\n        this.updateSection();\n      }\n    }\n\n    createSection() {\n      this.sectionService.add(this.f.name.value, +VisitType[this.f.type.value], this.gymId).subscribe(result => {\n        this.exit();\n      });\n    }\n\n    updateSection() {\n      this.sectionService.update(+this.id, this.f.name.value, +VisitType[this.f.type.value], this.gymId).subscribe(result => {\n        this.exit();\n      });\n    }\n\n    exit() {\n      this.router.navigate(['sections']);\n    }\n\n  }\n\n  AddEditSectionComponent.ɵfac = function AddEditSectionComponent_Factory(t) {\n    return new (t || AddEditSectionComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SectionService));\n  };\n\n  AddEditSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditSectionComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 16,\n    vars: 10,\n    consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/sections\", 1, \"btn\", \"btn-link\"], [\"formControlName\", \"type\"], [3, \"label\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\", \"value\"], [1, \"invalid-feedback\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function AddEditSectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddEditSectionComponent_h1_0_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(1, AddEditSectionComponent_h1_1_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditSectionComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditSectionComponent_div_4_Template, 5, 1, \"div\", 0);\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, AddEditSectionComponent_div_9_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n        i0.ɵɵtemplate(12, AddEditSectionComponent_span_12_Template, 1, 0, \"span\", 8);\n        i0.ɵɵtext(13, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"a\", 9);\n        i0.ɵɵtext(15, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f.name.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLinkWithHref],\n    encapsulation: 2\n  });\n  return AddEditSectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}