{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserManagerApiService = /*#__PURE__*/(() => {\n  class UserManagerApiService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.baseUrl + 'User/';\n    }\n\n    putRegistration(user) {\n      const endpointUrl = this.url;\n      return this.http.put(endpointUrl, user).pipe(catchError(error => of(console.log(error))));\n    }\n\n    postLogin(user) {\n      const endpointUrl = this.url;\n      return this.http.post(endpointUrl, user).pipe(catchError(error => of(console.log(error))));\n    }\n\n    get(request) {\n      const endpointUrl = this.url;\n      return this.http.get(endpointUrl, {\n        params: {\n          id: request.id == null ? '' : request.id.toString(),\n          roleId: request.roleId == null ? '' : request.roleId.toString(),\n          name: request.name == null ? '' : request.name,\n          email: request.email == null ? '' : request.email\n        }\n      });\n    }\n\n  }\n\n  UserManagerApiService.ɵfac = function UserManagerApiService_Factory(t) {\n    return new (t || UserManagerApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserManagerApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserManagerApiService,\n    factory: UserManagerApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserManagerApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}